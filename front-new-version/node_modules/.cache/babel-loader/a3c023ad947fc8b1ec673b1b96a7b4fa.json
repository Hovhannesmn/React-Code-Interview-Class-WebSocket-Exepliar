{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: '/'\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, {\n    authRedirectPath: action.path\n  });\n};\n\nconst setReportJson = (state, action) => {\n  return updateObject(state, {\n    reportJson: action\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    case actionTypes.ADD_REPORT_JSON:\n      return setReportJson(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dev/Documents/GitHub/React-Code-Interview-Class-WebSocket-Exepliar/aa/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","userId","error","loading","authRedirectPath","authStart","state","action","authSuccess","idToken","authFail","authLogout","setAuthRedirectPath","path","setReportJson","reportJson","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","ADD_REPORT_JSON"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,OAAO,EAAE,KAJU;AAKnBC,EAAAA,gBAAgB,EAAE;AALC,CAArB;;AAQA,MAAMC,SAAS,GAAG,CAAEC,KAAF,EAASC,MAAT,KAAqB;AACrC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAAEJ,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAR,CAAnB;AACD,CAFD;;AAIA,MAAMK,WAAW,GAAG,CAAEF,KAAF,EAASC,MAAT,KAAqB;AACvC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBN,IAAAA,KAAK,EAAEO,MAAM,CAACE,OADW;AAEzBR,IAAAA,MAAM,EAAEM,MAAM,CAACN,MAFU;AAGzBC,IAAAA,KAAK,EAAE,IAHkB;AAIzBC,IAAAA,OAAO,EAAE;AAJgB,GAAR,CAAnB;AAMD,CAPD;;AASA,MAAMO,QAAQ,GAAG,CAAEJ,KAAF,EAASC,MAAT,KAAqB;AACpC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBJ,IAAAA,KAAK,EAAEK,MAAM,CAACL,KADW;AAEzBC,IAAAA,OAAO,EAAE;AAFgB,GAAR,CAAnB;AAID,CALD;;AAOA,MAAMQ,UAAU,GAAG,CAAEL,KAAF,EAASC,MAAT,KAAqB;AACtC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAAEN,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAAR,CAAnB;AACD,CAFD;;AAIA,MAAMW,mBAAmB,GAAG,CAAEN,KAAF,EAASC,MAAT,KAAqB;AAC/C,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAAEF,IAAAA,gBAAgB,EAAEG,MAAM,CAACM;AAA3B,GAAR,CAAnB;AACD,CAFD;;AAGA,MAAMC,aAAa,GAAG,CAAER,KAAF,EAASC,MAAT,KAAqB;AACzC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAAES,IAAAA,UAAU,EAAER;AAAd,GAAR,CAAnB;AACD,CAFD;;AAIA,MAAMS,OAAO,GAAG,CAAEV,KAAK,GAAGP,YAAV,EAAwBQ,MAAxB,KAAoC;AAClD,UAAQA,MAAM,CAACU,IAAf;AACE,SAAKpB,WAAW,CAACqB,UAAjB;AACE,aAAOb,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AACF,SAAKV,WAAW,CAACsB,YAAjB;AACE,aAAOX,WAAW,CAACF,KAAD,EAAQC,MAAR,CAAlB;;AACF,SAAKV,WAAW,CAACuB,SAAjB;AACE,aAAOV,QAAQ,CAACJ,KAAD,EAAQC,MAAR,CAAf;;AACF,SAAKV,WAAW,CAACwB,WAAjB;AACE,aAAOV,UAAU,CAACL,KAAD,EAAQC,MAAR,CAAjB;;AACF,SAAKV,WAAW,CAACyB,sBAAjB;AACE,aAAOV,mBAAmB,CAACN,KAAD,EAAQC,MAAR,CAA1B;;AACJ,SAAKV,WAAW,CAAC0B,eAAjB;AACI,aAAOT,aAAa,CAACR,KAAD,EAAQC,MAAR,CAApB;;AACF;AACE,aAAOD,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeU,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: '/'\n};\n\nconst authStart = ( state, action ) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = ( state, action ) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false,\n  });\n};\n\nconst authFail = ( state, action ) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  });\n};\n\nconst authLogout = ( state, action ) => {\n  return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = ( state, action ) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\nconst setReportJson = ( state, action ) => {\n  return updateObject(state, { reportJson: action });\n};\n\nconst reducer = ( state = initialState, action ) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n  case actionTypes.ADD_REPORT_JSON:\n      return setReportJson(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}